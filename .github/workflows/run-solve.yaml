name: Solve Car Rental Model

on:
  push:
    branches:
      - main

jobs:
  sync-repository:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Get New Optilogic Token
        id: get_token
        run: |
          token=$(python optilogic/get_token.py --username=${{ secrets.OPTILOGIC_USERNAME }} --password=${{ secrets.OPTILOGIC_PASSWORD }})
          echo "::set-output name=optilogic_token::$token"
      -
        name: Optilogic Sync Job
        id: sync-repository
        env:
          optilogic_token: ${{ steps.get_token.outputs.optilogic_token }}
          optilogic_workspace: 'Studio'
          optilogic_directory_path: 'My Models/optimization-ops/optilogic'
          optilogic_filename: 'sync_repo.py'
        run: |
          job_key=$(python optilogic/create_job.py --apiKey=$optilogic_token --workspace=$optilogic_workspace --directoryPath="${optilogic_directory_path}" --filename="$optilogic_filename")
          echo "::set-output name=sync_job_key::$job_key"
          job_status=$(python optilogic/wait_for_job_completion.py --apiKey=$optilogic_token --workspace=$optilogic_workspace --jobKey=$job_key)
          echo "Sync Job is $job_status"
  solve-test:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2 
      -
        name: Get New Optilogic Token
        id: get_token
        run: |
          token=$(python optilogic/get_token.py --username=${{ secrets.OPTILOGIC_USERNAME }} --password=${{ secrets.OPTILOGIC_PASSWORD }})
          echo "::set-output name=optilogic_token::$token" 
      -
        name: Solve Model
        env:
          optilogic_token: ${{ steps.get_token.outputs.optilogic_token }}
          optilogic_workspace: 'Studio'
          optilogic_directory_path: 'My Models/optimization-ops/src'
          optilogic_filename: 'car_rental.py'
        run: |
          job_key=$(python optilogic/create_job.py --apiKey=$optilogic_token --workspace=$optilogic_workspace --directoryPath="${optilogic_directory_path}" --filename="$optilogic_filename")
          echo "::set-output name=sync_job_key::$job_key"
          job_status=$(python optilogic/wait_for_job_completion.py --apiKey=$optilogic_token --workspace=$optilogic_workspace --jobKey=$job_key)
          echo "Sync Job is $job_status"